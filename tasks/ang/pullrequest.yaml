apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:
          - name: MIX_GOOGLE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: watson-build-secrets
                key: MIX_GOOGLE_CLIENT_SECRET
          - name: MIX_GOOGLE_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: watson-build-secrets
                key: MIX_GOOGLE_CLIENT_ID
          - name: GIT_TOKEN
            valueFrom:
              secretKeyRef:
                name: tekton-git
                key: password
          - name: NPM_TOKEN
            valueFrom:
              secretKeyRef:
                name: web2-jx
                key: NPM_TOKEN
          - name: HOME
            value: /tekton/home
          - name: DOCKER_HOST
            value: http+unix://var/run/docker.sock
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          name: ""
          resources:
            requests:
              cpu: 400m
              memory: 512Mi
          workingDir: /workspace/source
        volumes:
        - name: dind-storage
          emptyDir: {}
        - name: dind-socket
          emptyDir: {}
        sidecars:
        - image: 339765050942.dkr.ecr.eu-west-1.amazonaws.com/docker:20.10.11-dind-aws
          name: server
          securityContext:
            privileged: true
          script: |
            /usr/local/bin/aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 339765050942.dkr.ecr.eu-west-1.amazonaws.com
          volumeMounts:
            - mountPath: /var/lib/docker
              name: dind-storage
            - mountPath: /var/run/
              name: dind-socket
        steps:
        - image: ghcr.io/jenkins-x/jx-boot:3.2.217
          name: jx-variables
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx gitops variables
            jx gitops pr variables
        - image: ghcr.io/jenkins-x/jx-registry:0.1.1
          name: check-registry
          resources: {}
        - image: gcr.io/kaniko-project/executor:v1.7.0-debug
          name: build-container-build
          resources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS \
            --build-arg=DOCKER_REGISTRY=$DOCKER_REGISTRY/jx/ \
            --build-arg=NPM_TOKEN=${NPM_TOKEN} \
            --build-arg=HTTPS_GIT_CREDS=https://${GIT_TOKEN}@github.com \
            --build-arg=MIX_GOOGLE_CLIENT_ID=${MIX_GOOGLE_CLIENT_ID} \
            --build-arg=MIX_GOOGLE_CLIENT_SECRET=${MIX_GOOGLE_CLIENT_SECRET} \
            --context=/workspace/source \
            --cache=true \
            --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME \
            --dockerfile=Dockerfile \
            --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
        - image: gcr.io/kaniko-project/executor:v1.7.0-debug
          name: build-container-stages
          resources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            cat Dockerfile |\
              grep -i from |\
              grep -i " as " |\
              awk '{print $NF}' |\
              xargs -n 1 -I{} bash -c "(/kaniko/executor $KANIKO_FLAGS \
                      --build-arg=DOCKER_REGISTRY=$DOCKER_REGISTRY/jx/ \
                      --build-arg=NPM_TOKEN=${NPM_TOKEN} \
                      --build-arg=HTTPS_GIT_CREDS=https://${GIT_TOKEN}@github.com \
                      --build-arg=MIX_GOOGLE_CLIENT_ID=${MIX_GOOGLE_CLIENT_ID} \
                      --build-arg=MIX_GOOGLE_CLIENT_SECRET=${MIX_GOOGLE_CLIENT_SECRET} \
                      --context=/workspace/source \
                      --cache=true \
                      --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME \
                      --dockerfile=Dockerfile \
                      --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:stage_{}-$VERSION) || exit 255"
        - image: docker/compose:1.25.5
          name: docker-compose-test
          resources: {}
          script: |
            #!/usr/bin/env sh
            DOCKER_HOST=$DOCKER_HOST && docker-compose -f docker-compose.test.yaml up --build --abort-on-container-exit
          volumeMounts:
          - mountPath: /var/run/
            name: dind-socket
        - image: docker
          name: client
          script: |
            #!/usr/bin/env bash
            cat > Dockerfile << EOF
            FROM ubuntu
            RUN apt-get update
            ENTRYPOINT ["echo", "hello"]
            EOF
            docker build -t hello . && docker run hello
            docker images
          volumeMounts:
            - mountPath: /var/run/
              name: dind-socket
        - image: ghcr.io/jenkins-x-plugins/jx-preview:0.0.192
          name: promote-jx-preview
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx preview create
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}